volumes:
  mysql_data:
  minio_data:

networks:
  backend_network:
    driver: bridge
services:
  mysql:
    image: mysql:9.2
    container_name: mysql
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - backend_network

  minio:
    image: minio/minio:latest
    container_name: minio_server
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - backend_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    platform: linux/amd64
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql
    restart: always
    networks:
      - backend_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: go_backend
    depends_on:
      - mysql
      - minio
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      GO_ENV: ${GO_ENV}
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    working_dir: /app
    command: ["air", "-c", ".air.toml"]
    networks:
      - backend_network