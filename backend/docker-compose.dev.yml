volumes:
  mysql_data:
  minio_data:

networks:
  backend_network:
    driver: bridge
services:
  mysql:
    image: mysql:9.2
    container_name: mysql
    environment:
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_DATABASE: jongtoh
      MYSQL_ROOT_PASSWORD: rootpassword123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - backend_network

  minio:
    image: minio/minio:latest
    container_name: minio_server
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    networks:
      - backend_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    platform: linux/amd64
    container_name: phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: root
      PMA_PASSWORD: rootpassword123
    ports:
      - "8081:80"
    depends_on:
      - mysql
    restart: always
    networks:
      - backend_network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: go_backend
    depends_on:
      - mysql
      - minio
    environment:
      MYSQL_HOST: mysql
      MYSQL_PORT: 3306
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
      MYSQL_DATABASE: jongtoh
      MINIO_INTERNAL_ENDPOINT: minio:9000
      MINIO_PUBLIC_ENDPOINT: localhost:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      JWT_SECRET: mysecret
      GO_ENV: development
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    working_dir: /app
    command: ["air", "-c", ".air.toml"]
    tty: true
    networks:
      - backend_network